from aiogram import Router, Bot, F
from aiogram.types import Message
from aiogram.filters.command import Command
from config import ADMINS
from database.db import get_connection
from .rh_extract import process_race_db

from pathlib import Path
import tempfile, aiofiles

router = Router()

@router.message(Command("rh_import"))
async def cmd_upload_results(message: Message):
    if message.from_user.id not in ADMINS:
        await message.reply("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")
        return

    await message.reply("üì• –û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª –±–∞–∑—ã RotorHazard (.db) —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ.")

@router.message(F.document)
async def handle_rh_database(message: Message, bot: Bot):
    if message.from_user.id not in ADMINS:
        return

    doc = message.document
    if not doc.file_name.endswith(".db"):
        await message.reply("‚ö†Ô∏è –≠—Ç–æ –Ω–µ .db —Ñ–∞–π–ª.")
        return

    try:
        temp_path = Path(tempfile.gettempdir()) / doc.file_name

        # –ü–æ–ª—É—á–∞–µ–º file_id ‚Üí file_path
        file_info = await bot.get_file(doc.file_id)
        file_data = await bot.download_file(file_info.file_path)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        async with aiofiles.open(temp_path, "wb") as f:
            await f.write(file_data.read())

        await message.reply("üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∞–∑—ã‚Ä¶")

        conn = get_connection()
        await process_race_db(str(temp_path), conn)

        await message.reply("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")
    except Exception as e:
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:\n<pre>{e}</pre>", parse_mode="HTML")